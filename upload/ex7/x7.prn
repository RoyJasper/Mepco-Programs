<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
G.KALYANA SUNDAR								R.NO:14BITL06

EX.NO:7
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
#include<stdio.h>

#include<stdlib.h>

#include<sys/types.h>

#include<netdb.h>

#include<errno.h>

#include<signal.h>

#include<unistd.h>

#include<arpa/inet.h>

#include<string.h>

#include<sys/wait.h>

#include<sys/socket.h>

#include<netinet/in.h>

#include<math.h>

void timer();

void endt();

main()

{

char a[100][100],f1[100],nk[100];

int y,k,j,i,sf,sw,l,l1,f,q,j1;

int c,s,sn,cou=0,o,n,r,w,ws,m,se[100],n1,pp;

struct sockaddr_in server,client;

server .sin_family=AF_INET;

printf("enter the port number");

scanf("%d",&f);

server.sin_port=htons(f);

server.sin_addr.s_addr=htonl(INADDR_ANY);

s=socket(AF_INET,SOCK_STREAM,0);

if(s>0)

printf("\n socket is successfull");

else

printf("\n socket not success");

c=connect(s,(struct sockaddr *)&server,sizeof(server));

if(c==0)

printf("\n connected ");

else

printf("\nnot connected");


scanf("%d",&n);

send(s,&n,100,0);

printf("enter the frame size");

scanf("%d",&f);

send(s,&f,100,0);

printf("enter the frame to send");

for(i=0;i<f;i++)

{

for(j=0;j<n;j++)

{

scanf(" %c",&a[i][j]);

}

}

j=0;

j1=0;

for(i=0;i<f;i++)

{

while(j!=n)

{

f1[j1]=a[i][j];

j1++;

j++;

}

j=0;

}

strcpy(nk,"00");

for(i=0;i<j1;i++)

{

if(f1[i]=='0')

strcat(nk,"01");

else

strcat(nk,"10");

}

strcat(nk,"11");

send(s,nk,100,0);

send(s,&j1,100,0);

printf("window size");

scanf("%d",&m);

k=m-1;

w=pow(2,k);

send(s,&w,100,0);

c=0;

for(i=0;i<f;i++)

{

se[i]=c;

c++;

if(c==w+1)

c=0;

}

k=i;

printf("%d",k);

send(s,&k,100,0);

for(i=0;i<k;i++)

{

timer();

send(s,&se[i],100,0);

recv(s,&pp,2,0);

printf("\nacknow for %dth frame",pp);

endt();

}

printf("to generate negack press 1");

scanf("%d",&q);

r=rand()%f;

n1=rand()%n;

printf("\n%d%d",r,n1);

if(a[r][n1]=='1')

a[r][n1]='0';

else

a[r][n1]='1';

printf("the sequence is");

for(i=0;i<f;i++)

{

for(j=0;j<n;j++)

{

printf(" %c",a[i][j]);

}

}

}

void timer()

{

time_t start;

start=clock();

}

void endt()

{

time_t end;

end=clock();

}
bash-3.2$ cat s.c
#include<stdio.h>
#include<stdlib.h>
#include<sys/types.h>
#include<netdb.h>
#include<errno.h>
#include<signal.h>
#include<unistd.h>
#include<arpa/inet.h>
#include<string.h>
#include<sys/wait.h>
#include<sys/socket.h>
#include<netinet/in.h>
#include<math.h>
#include<math.h>
int main()
{
char msg[100],m[100],ss[100],nk[100],nk1[100];
time_t t;
int f,o,j;
int sd,b,l,a,len,n1,z,n,c,i,k,se[100],se1[100];
int res,winsize,s,sk,w,q,r,ki;
struct sockaddr_in server,client;
server.sin_family=AF_INET;
printf("enter the port number");
scanf("%d",&k);
server.sin_port=htons(k);
server.sin_addr.s_addr=htonl(INADDR_ANY);
sd=socket(AF_INET,SOCK_STREAM,0);
if(sd>0)
printf("socket created\n");
else
printf("socket unsuccessful\n");
b=bind(sd,(struct sockaddr *)&server,sizeof(server));
if(b==0)
printf("bind was successful");
else
printf("bind unsuccssful");
l=listen(sd,3);
if(l==0)
printf("listen successful\n");
else
printf("listen unsuccessful\n");
len=sizeof(client);
a=accept(sd,(struct sockaddr *)&client,&len);
if(a>0)
printf("accept successful\n");
else
printf("accept unsuccessful\n");
recv(a,&n,100,0);
recv(a,&f,100,0);
recv(a,nk,100,0);
printf("%s",nk);
recv(a,&ki,100,0);
printf("\n%d",ki);
recv(a,&w,100,0);
winsize=f;
//printf("\n winsize %d",winsize);
c=0;
for(i=0;i<winsize;i++)
{
se1[i]=c;
//printf("seq no new \n %d",se1[i]);
c++;
if(c==w+1)
c=0;
}
recv(a,&k,100,0);

o=k;
//printf("%d",o);
i=0;
while(i!=k)
{
recv(a,&se[i],100,0);
//printf("%d\n",se[i]);
send(a,&i,2,0);
i++;
}

int v;
for(i=0;i<winsize;i++)
{
if(se[i]==se1[i])
v=1;
else
v=0;
}
k=(ki*2)+4;
j=0;
if(v==1)
{
printf("\nno error");
printf("\nthe original message");
for(i=2;i<k-2;i++)
{
if(nk[i]=='0')
{
printf("%d",0);
i=i+1;
}
else
{
printf("%d",1);
i=i+1;
}
}
}
else
printf("error");
}
bash-3.2$ exit
exit

Script done on Tue 27 Sep 2016 03:30:38 PM IST
