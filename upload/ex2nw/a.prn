***********************************************************************************
EXNO:2                                                       NAME:M.VIGNESH
12-7-16                                                      EXNO:14bit062
***********************************************************************************
                        ERROR DETECTION TECHNIQUE
#include<stdio.h>
#include<string.h>
main()
{
 FILE *fp;
 char t[100],y;
 int x,f,k,m[20],mm[20],count,j=0,ex,array[20], i;
 fp=fopen("a.c","w");
 int s,n;
 printf("\n enter the message   \n");
 char h;
 scanf("%c",&h);
 i=0;
 while(h!='a')
 {
     t[i]=h;
      scanf("\n%c",&h);
      i++;
 }
 count=i;
  for(i=0;i<count;i++)
 {
     printf("%c ",t[i]);
 }
 printf("\n\n\n");
 for(i=0;i<count;i++)
 {
     y=t[i];
 if((int)y==48)
    m[i]=0;
else if((int)y==49)
    m[i]=1;
else
    m[i]=2;

printf("%d ",m[i]);
 }
          if(count%8==0)
            ex=0;
          else
          {
          ex=8-(count%8);
  for(i=count;i<count+ex;i++)
   {
      m[i]=2;
    }
          }
   count=count+ex;

          printf("\ncount  %d",count);
  for(i=0;i<8;i++)
    array[i]=0;
    for(i=0;i<count;i++)
      {
          k=i%8;


          if(m[i]==1)

               array[k]=array[k]+1;
       }
     for(i=0;i<count;i++)
       {
          fprintf(fp,"%d",m[i]);
        }
        putc('#',fp);
      for(i=0;i<8;i++)
       {
         if(array[i]%2==0)
           putc('0',fp);
         else
           putc('1',fp);
        }
       putc('#',fp);
       k=1;
       for(i=0;i<count;i++)
       {
         if((i/8)==k)
            k++;
         if(m[i]==1)
            array[k]=array[k]+1;
       }
       for(i=1;i<=k;i++)
         {
          if((array[i]%2)==0)
            putc('0',fp);
          else
             putc('1',fp);
          }
     }


bash-3.2$ cat ar.c
#include<stdio.h>
#include<string.h>
main()
{
FILE *fp;
int u,j,count,k,d;
int m[100],array[100],f[100];
int i=0,c,g;
char x;
fp=fopen("a.c","r");
x=fgetc(fp);

printf("\n ***** the intermediate message  ******* \n\n\n");
while((x!='#'))
{

if((int)x==48)
    m[i]=0;
else if((int)x==49)
    m[i]=1;
else
    m[i]=2;
x=fgetc(fp);
printf("%d ",m[i]);
i++;
}
for(j=0;j<i;j++)
    f[j]=m[j];
  c=i;
  //x=fgetc(fp);
  x=fgetc(fp);
  while(x!='#')
  {
  if((int)x==48)
  m[i]=0;
  else
  m[i]=1;
  x=fgetc(fp);
  printf("%d ",m[i]);
  i++;
  }
count=i;
u=count-c;
for(i=0;i<8;i++)
    array[i]=0;
    for(i=0;i<count;i++)
      {
          k=i%8;
          if(m[i]==1)
               array[k]=array[k]+1;
       }

       for(i=0;i<8;i++)
       g=0;
           for(i=0;i<8;i++)
       {

         if(array[i]%2==0)
           g=g+1;
        }
       // printf("\n\n\n **** transmited message  ****\n\n\n");
       /* if(g==8)
        {

            for(i=0;i<c;i++)
        {
           //if(m[i]==1 || m[i]==0)
          //printf("%d",m[i]);
        }
        }
        else
            printf("\n error in transmission");*/
  i=c;
  x=getc(fp);
  while(x!=EOF)
  {
  if((int)x==48)
  f[i]=0;
  else
  f[i]=1;
  x=fgetc(fp);
  printf("%d ",f[i]);
  i++;
  }

      int r[100],h,o;
       h=0;
      d=c;
      k=1;
      for(i=0;i<c;i++)
       {
         if((i/8)==k)
            k++;
         if(f[i]==1)
            array[k]=array[k]+1;
       }
 for(i=1;i<=k;i++)
         {
             //printf("array%d ",array[i]);
         }
         for(i=1;i<=k;i++)
         {
          if((array[i]%2)==0)
             r[h]=0;
          else
             r[h]=1;
             h++;
          }
           for(i=0;i<k;i++)
         {
           //  printf("rrrr%d",r[i]);
         }
          for(i=0;i<h;i++)
          {
              if(r[i]==f[d])
              {

                 d++;
                  o=0;
              }
              else
                goto aa;
          }


printf("\n\n   *******   the actual message   ********\n\n\n");
            for(i=0;i<c;i++)
       {
           if(f[i]==1 || f[i]==0)
          printf("%d ",f[i]);
        }
if(o!=0)
{
   aa:
        printf("\n error");
}


}

bash-3.2$ cc as.c
bash-3.2$ ./a.out

 enter the message   
101010101010a
1 0 1 0 1 0 1 0 1 0 1 0 


1 0 1 0 1 0 1 0 1 0 1 0 
count  16bash-3.2$ ./a.outcc as.c[C[1P.cr.c
bash-3.2$ ./a.out

 ***** the intermediate message  ******* 


1 0 1 0 1 0 1 0 1 0 1 0 2 2 2 2 0 0 0 0 1 0 1 0 0 0 

   *******   the actual message   ********


1 0 1 0 1 0 1 0 1 0 1 0 bash-3.2$ ./a.outcc ar.c./a.outcc ar.c[C[1P.c[1P.c[1P.c[1P.ca.ct.c .cc.cs.c .cs.ce.cn.c[1P.c[1P.c[1P.c[1P.cs.ce.cn.cd.c
#include<stdio.h>
main()
{
long int a,b;
int c[100],e[100],cs[100],y,z,i,d,j,m;
char f;
FILE *fp;
fp=fopen("b.txt","w");
printf("Enter the DATA");
scanf("%ld",&a);
i=0;
d=0;
while(a!=0)
{
b=a%10;
a=a/10;
c[i]=b;
printf("\n%d",c[i]);
i++;
d++;
}
j=0;
for(i=d-1;i>=0;i--)
{
    e[j]=c[i];
    printf("%d\n",e[j]);
    j++;
}
y=d/8;
y++;
z=y*8;
m=2;
printf("%d\n",z);
for(i=0;i<z;i++)
{
    if(i<d)
        fprintf(fp,"%d ",e[i]);
    else
        fprintf(fp,"%d ",m);
}
fprintf(fp,"\n");
for(i=0;i<z;i++)
{
    if(i>=d)
        e[i]=0;
}
j=15;
for(i=7;i>=0;i--)
{
cs[i]=add(e[i],e[j]);
//fprintf(fp,"%d ",cs[i]);
j--;
}
for(i=0;i<=7;i++)
{
    cs[i]=com(cs[i]);
    fprintf(fp," %d",cs[i]);
}
}
int add(int x,int y)
{
static int c=0;
if((x==0)&&(y==0)&&(c==0))
{
    c=0;return 0;
}
if((x==0)&&(y==1)&&(c==0))
{
    c=0;return 1;
}
if((x==1)&&(y==0)&&(c==0))
{
    c=0;return 1;
}
if((x==1)&&(y==1)&&(c==0))
{
    c=1;return 0;
}
if((x==0)&&(y==0)&&(c==1))
{
    c=0;return 1;
}
if((x==0)&&(y==1)&&(c==1))
{
    c=1;return 0;
}
if((x==1)&&(y==0)&&(c==1))
{
    c=1;return 0;
}
if((x==1)&&(y==1)&&(c==1))
{
    c=1;return 1;
}
}
int com(int x)
{
    if (x==1)
        return 0;
    else
        return 1;
}
bash-3.2$ cs[Kat csrev.c
#include<stdio.h>
main()
{
long int a,b;
int c[100],e[100],cs[100],f[100],cd[100],y,z,i,d,j,l[100],flag=0;
FILE *fp;
fp=fopen("b.txt","r");
i=0;
for(i=0;i<8;i++)
{
fscanf(fp,"%d",&c[i]);
if(c[i]==2)
c[i]=0;
}
printf("\n");
i=0;
for(i=0;i<8;i++)
{
fscanf(fp,"%d",&e[i]);
if(e[i]==2)
e[i]=0;
}
i=0;
for(i=0;i<8;i++)
{
fscanf(fp,"%d",&cs[i]);
if(cs[i]==2)
cs[i]=0;
}
for(i=7;i>=0;i--)
{
f[i]=add(c[i],e[i]);
}
for(i=7;i>=0;i--)
{
cd[i]=add1(f[i],cs[i]);
cd[i]=com(cd[i]);
}
for(i=0;i<=7;i++)
{
    if(cd[i]==1)
    {
    flag=1;
    break;
    }
}
if(flag==0)
{
printf("Correct Message");
rewind(fp);
i=0;
while(fscanf(fp,"%d",&l[i])!=EOF)
{
    if(l[i]!=2)
    printf("%d",l[i]);
    else
    break;
    i++;
}
}
else
printf("Wrong Message");

}
int add(int x,int y)
{
static int c=0;
if((x==0)&&(y==0)&&(c==0))
{
    c=0;return 0;
}
if((x==0)&&(y==1)&&(c==0))
{
    c=0;return 1;
}
if((x==1)&&(y==0)&&(c==0))
{
    c=0;return 1;
}
if((x==1)&&(y==1)&&(c==0))
{
    c=1;return 0;
}
if((x==0)&&(y==0)&&(c==1))
{
    c=0;return 1;
}
if((x==0)&&(y==1)&&(c==1))
{
    c=1;return 0;
}
if((x==1)&&(y==0)&&(c==1))
{
    c=1;return 0;
}
if((x==1)&&(y==1)&&(c==1))
{
    c=1;return 1;
}
}
int com(int x)
{
    if (x==1)
        return 0;
    else
        return 1;
}
int add1(int x,int y)
{
static int c=0;
if((x==0)&&(y==0)&&(c==0))
{
    c=0;return 0;
}
if((x==0)&&(y==1)&&(c==0))
{
    c=0;return 1;
}
if((x==1)&&(y==0)&&(c==0))
{
    c=0;return 1;
}
if((x==1)&&(y==1)&&(c==0))
{
    c=1;return 0;
}
if((x==0)&&(y==0)&&(c==1))
{
    c=0;return 1;
}
if((x==0)&&(y==1)&&(c==1))
{
    c=1;return 0;
}
if((x==1)&&(y==0)&&(c==1))
{
    c=1;return 0;
}
if((x==1)&&(y==1)&&(c==1))
{
    c=1;return 1;
}
}

bash-3.2$ cc cssend.c
bash-3.2$ ./a.out
Enter the DATA 10101010

0
1
0
1
0
1
0
11
0
1
0
1
0
1
0
16
bash-3.2$ ./a.outcc cssend.c[1P.c[1P.c[1P.c[1P.cr.ce.cv.c
bash-3.2$ ./a.out

Correct Message10101010bash-3.2$ exit
exit

Script done on Tue 26 Jul 2016 03:36:11 PM IST
