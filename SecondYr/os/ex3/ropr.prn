*************************************************************
ROY JASPER C.S                          14BIT058
     EX 4 --> PRIORITY AND ROUND ROBIN ALGORITHM
-------------------------------------------------------------
               PRIORITY ALGORITHM
#include<stdio.h>
 
int main()
{
    int bt[20],p[20],wt[20],tat[20],pr[20],i,j,n,total=0,pos,temp,avg_wt,avg_tat;
    printf("Enter Total Number of Process:");
    scanf("%d",&n);
 
    printf("\nEnter Burst Time and Priority\n");
    for(i=0;i<n;i++)
    {
        printf("\nP[%d]\n",i+1);
        printf("Burst Time:");
        scanf("%d",&bt[i]);
        printf("Priority:");
        scanf("%d",&pr[i]);
        p[i]=i+1;           //contains process number
    }
 
    //sorting burst time, priority and process number in ascending order using selection sort
    for(i=0;i<n;i++)
    {
        pos=i;
        for(j=i+1;j<n;j++)
        {
            if(pr[j]<pr[pos])
                pos=j;
        }
 
        temp=pr[i];
        pr[i]=pr[pos];
        pr[pos]=temp;
 
        temp=bt[i];
        bt[i]=bt[pos];
        bt[pos]=temp;
 
        temp=p[i];
        p[i]=p[pos];
        p[pos]=temp;
    }
 
    wt[0]=0;            //waiting time for first process is zero
 
    //calculate waiting time
    for(i=1;i<n;i++)
    {
        wt[i]=0;
        for(j=0;j<i;j++)
            wt[i]+=bt[j];
 
        total+=wt[i];
    }
 
    avg_wt=total/n;      //average waiting time
    total=0;
 
    printf("\nProcess\t    Burst Time    \tWaiting Time\tTurnaround Time");
    for(i=0;i<n;i++)
    {
        tat[i]=bt[i]+wt[i];     //calculate turnaround time
        total+=tat[i];
        printf("\nP[%d]\t\t  %d\t\t    %d\t\t\t%d",p[i],bt[i],wt[i],tat[i]);
    }
 
    avg_tat=total/n;     //average turnaround time
    printf("\n\nAverage Waiting Time=%d",avg_wt);
    printf("\nAverage Turnaround Time=%dn",avg_tat);
    return 0;
}

OUTPUT:

Enter Total Number of Process: 3

Enter Burst Time and Priority

P[1]
Burst Time: 12
Priority: 3

P[2]
Burst Time: 10
Priority: 9

P[3]
Burst Time: 9 7
Priority: 1

Process	    Burst Time    	Waiting Time	Turnaround Time
P[3]		  7		    0			7
P[1]		  12		    7			19
P[2]		  10		    19			29

Average Waiting Time=8
Average Turnaround Time=18
------------------------------------------------
                ROUND ROBIN
PROGRAM:
#include <stdio.h>

int main(void)
{
    int i,j,n,time,remain,flag=0,ts;
    int sum_wait=0,sum_turnaround=0,at[10],bt[10],rt[10];
    printf("Enter no of Processes : ");
    scanf("%d",&n);
    remain=n;
    for(i=0; i<n; i++)
    {
        at[i]=0;
    }
    for(i=0; i<n; i++)
    {
        printf("Enter burst time for Process P%d :",i+1);
//scanf("%d",&at[i]);
        scanf("%d",&bt[i]);
        rt[i]=bt[i];
    }
    printf("Enter time slice");
    scanf("%d",&ts);
    printf("\n\nProcess\tTurnaround time\twaiting time\n\n");
    for(time=0,i=0; remain!=0;)
    {
        if(rt[i]<=ts && rt[i]>0)
        {
            time+=rt[i];
            rt[i]=0;
            flag=1;
        }
        else if(rt[i]>0)
        {
            rt[i]-=ts;
            time+=ts;
        }
        if(rt[i]==0 && flag==1)
        {
            remain--;
            printf("P[%d]\t\t%d\t\t%d\n",i+1,time-at[i],time-at[i]-bt[i]);
            sum_wait+=time-at[i]-bt[i];
            sum_turnaround+=time-at[i];
            flag=0;
        }
        if(i==n-1)
            i=0;
        else if(at[i+1]<=time)
            i++;
    }
    printf("\nAvg sum_wait = %f\n",sum_wait*1.0/n);
    printf("Avg sum_turnaround = %f",sum_turnaround*1.0/n);
    return 0;
}
 

OUTPUT:

Enter no of Processes :   3
Enter burst time for Process P1 : 15
Enter burst time for Process P2 : 8
Enter burst time for Process P3 : 6
Enter time slice3


Process	Turnaround time	waiting time

P[3]		18		12
P[2]		23		15
P[1]		29		14

Avg sum_wait = 13.666667
Avg sum_turnaround = 23.333333bash-3.2$ exit
exit
There are stopped jobs.
bash-3.2$ exit
exit

Script done on Thu 11 Feb 2016 03:15:23 PM IST
