****************************************************************************
AUTHOR NAME  :P.SIVA SANKARAN
ROLL NO      :14BIT059
EXERCISE NO  :6
EXERCISE NAME:PROGRAM USING COPY CONSTRUCTOR
***************************************************************************
SUPPLIER CLASS AND PRODUCT CLASS
*********************************
#include<iostream>
#include<string>
using namespace std;
class product
{
	string pname;
	int pcode;
public:
	product()
	{
	pname="";
	pcode=0;
	}
product(string tname,int tpcode)
{
pname=tname;
pcode=tpcode;
}
	void printdetails()
	{
	cout<<"\n \t\tproduct name      "<<pname;
	cout<<"\n \t\tproduct code       "<<pcode;
	}
};
class supplier
{
	int id;
	string name;
	int tot;
	product *list;
public:
	supplier()
	{
	name="";
	list=0;
	tot=0;
	}
supplier(int tid,string tna,product *tlist,int ttot)
{
tot=ttot;
id=tid;
name=tna;
list =new product [ttot];
for(int i=0;i<ttot;i++)
list[i]=tlist[i];
}
	supplier(supplier &dum)
	{
	tot=dum.tot;
	id=dum.id;
	name=dum.name;
	list=new product[dum.tot];
	for(int i=0;i<dum.tot;i++)
	list[i]=dum.list[i];
}
~supplier()
{
cout<<"\n destructor is invoked\n";
delete []list;
cout<<"\n deleted";
}
	void displaydetails()
	{
	cout<<"\n supplier name     "<<name;
	cout<<"\n supplier id     "<<id;
	cout<<"\n list of item supplied :   \n";
	for(int i=0;i<tot;i++)
	list[i].printdetails();
	}
};
int main()
{
 product x[10];
string ti,tna;
int n,i,co,tid,tt,m;
cout<<"\n----------------------------------------------\n";
cout<<"\n enter the number of products in the shop    \n";
cin>>n;
for(i=0;i<n;i++)
{
cout<<"\n enter the product name    ";
cin>>ti;
cout<<"\n enter the product no   ";
cin>>co;
x[i]=product(ti,co);
}
cout<<"\n enter the 1st supplier name   ";
cin>>tna;
cout<<"\n enter 1st supplier id    ";
cin>>tid;
cout<<"\n enter the  number of item supplied   ";
cin>>m;
supplier a(tid,tna,x,m);
cout<<"\n enter the 2nd supplier name    ";
cin>>tna;
cout<<"\n enter the 2nd supplier id    ";
cin>>tid;
cout<<"\n enter the  number of item supplied  ";
cin>>m;
supplier b(tid,tna,x+2,m);
//supplier c(b);
cout<<"\n************************************************\n";
cout<<"\n          $$$ 	 SUPERMARKET  $$$           \n";
cout<<"\n************************************************\n";
a.displaydetails();
cout<<"\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n";
b.displaydetails();
cout<<"\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n";
//c.displaydetails();
//cout<<"\n*************************************************\n";
return 0;
}

OUTPUT
******

----------------------------------------------

 enter the number of products in the shop    
4

 enter the product name    
soap

 enter the product no   
1

 enter the product name    
shampoo

 enter the product no   
2

 enter the product name    
comb

 enter the product no   
3

 enter the product name    
watch

 enter the product no   
4

 enter the 1st supplier name   
siva

 enter 1st supplier id    
10

 enter the  number of item supplied   
2

 enter the 2nd supplier name    
ravi

 enter the 2nd supplier id    
12

 enter the  number of item supplied  
2

************************************************

          $$$ 	 SUPERMARKET  $$$           

************************************************

 supplier name     siva
 supplier id     10
 list of item supplied :   

 		product name      soap
 		product code       1
 		product name      shampoo
 		product code       2
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

 supplier name     ravi
 supplier id     12
 list of item supplied :   

 		product name      comb
 		product code       3
 		product name      watch
 		product code       4
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

 destructor is invoked

 deleted
 destructor is invoked

 deleted
SUBJECT AND EXAMINER CLASS
***************************
#include<iostream>
#include<string>
using namespace std;
class subject
{
	string stitle;
	int scode;
public:
	subject()
	{
	stitle="";
	scode=0;
	}
subject(string tstitle,int tscode)
{
stitle=tstitle;
scode=tscode;
}
	void printdetails()
	{
	cout<<"\n \t\tsubject title      "<<stitle;
	cout<<"\n \t\tsubject code       "<<scode;
	}
};
class examiner
{
	int id;
	string name;
	int tot;
	subject *list;
public:
	examiner()
	{
	name="";
	list=0;
	tot=0;
	}
examiner(int tid,string tna,subject *tlist,int ttot)
{
tot=ttot;
id=tid;
name=tna;
list =new subject [ttot];
for(int i=0;i<ttot;i++)
list[i]=tlist[i];
}
	examiner(examiner &dum)
	{
	tot=dum.tot;
	id=dum.id;
	name=dum.name;
	list=new subject[dum.tot];
	for(int i=0;i<dum.tot;i++)
	list[i]=dum.list[i];
}
~examiner()
{
cout<<"\n destructor is invoked\n";
delete []list;
cout<<"\n deleted";
}
	void displaydetails()
	{
	cout<<"\n examiner name     "<<name;
	cout<<"\n examiner id     "<<id;
	cout<<"\n list of papers evaluated :   \n";
	for(int i=0;i<tot;i++)
	list[i].printdetails();
	}
};
int main()
{
 subject x[10];
string ti,tna;
int n,i,co,tid,tt,m;
cout<<"\n enter the number of subjects    \n";
cin>>n;
for(i=0;i<n;i++)
{
cout<<"\n enter the subject title    ";
cin>>ti;
cout<<"\n enter the subject code   ";
cin>>co;
x[i]=subject(ti,co);
}
cout<<"\n enter the first examiner name   ";
cin>>tna;
cout<<"\n enter the examiner id    ";
cin>>tid;
cout<<"\n enter the  number of subject to be evaluated   ";
cin>>m;
examiner a(tid,tna,x,m);
cout<<"\n enter the second examiner name    ";
cin>>tna;
cout<<"\n enter the examiner id    ";
cin>>tid;
cout<<"\n enter the  number of subject to be evaluated   ";
cin>>m;
examiner b(tid,tna,x+2,m);
examiner c(b);
cout<<"\n************************************************\n";
cout<<"\n       examiner and their subject details\n  ";
cout<<"\n************************************************\n";
a.displaydetails();
cout<<"\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n";
b.displaydetails();
cout<<"\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n";
c.displaydetails();
cout<<"\n*************************************************\n";
return 0;
}

OUTPUT
*******
 enter the number of subjects    
4

 enter the subject title    
eng

 enter the subject code   
1

 enter the subject title    
maths

 enter the subject code   
2

 enter the subject title    
science

 enter the subject code   
3

 enter the subject title    
socia; l

 enter the subject code   
4

 enter the first examiner name   
siva

 enter the examiner id    
1

 enter the  number of subject to be evaluated   
2

 enter the second examiner name    
ravi

 enter the examiner id    
105

 enter the  number of subject to be evaluated   
2

************************************************

       examiner and their subject details
  
************************************************

 examiner name     siva
 examiner id     1
 list of papers evaluated :   

 		subject title      eng
 		subject code       1
 		subject title      maths
 		subject code       2
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

 examiner name     ravi
 examiner id     105
 list of papers evaluated :   

 		subject title      science
 		subject code       3
 		subject title      social
 		subject code       4
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  destructor is invoked

 deleted
 destructor is invoked

 deletedbash-3.2$ exit
exit


