******************************************************************************
EX NO: 6														NAME:RAHUL RAJAN D
DATE:																ROLLNO:14BIT053
******************************************************************************
			IMPLEMENTATION OF MAX HEAP
********************************************************************************
#include<stdio.h>
#include<string.h>
#include<stdlib.h>
struct node
{
int *data;
int size;
int capacity;
};
typedef struct node * heap;
heap create(int);
heap insert(int,heap);
int deletemax(heap);
int isempty(heap);
int isfull(heap);
void display(heap);

bash-3.2$ cat heapimp.vc[K[Kc
#include"heaphead.h"
heap create(int n)
{
heap q;
q->data=(int*)malloc(n*sizeof(int));
q->size=0;
q->capacity=n;
q->data[0]=-999;
return q;
}
heap insert(int x,heap h)
{
int i;
if(h->size==h->capacity)
{
printf("IT IS NOT POSSIBLE");
return 0;
}
else
{
h->size++;
for(i=h->size;h->data[i/2]>x;i=i/2)
{
h->data[i]=h->data[i/2];
}
h->data[i]=x;
return h;
//}
}
}
int deletemax(heap h)
{
int child,lastmin,i=1,max;
if(!isempty (h))
{
max=h->data[i];
lastmin=h->data[h->size];
h->size--;
for(i=1;i*2<=h->size;i=child)
{
child=i*2;
if(child!=h->size && h->data[child+1]>h->data[child])
{
child++;
}
if(lastmin<h->data[child])
h->data[i]=h->data[child];
else
break;
}
h->data[i]=lastmin;
return max;
}
}
int isfull(heap h)
{
if(h->size==h->capacity)
{
return 1;
}
else
return 0;
}
int isempty(heap h)
{
if(h->size==0)
{
return 1;
}
else
return 0;
}
void display(heap h)
{
int i;
for(i=1;i<=h->size;i++)
{
printf("%d",h->data[i]);
}
}

bash-3.2$ cat heapapp.c
#include"heaphead.h"
main()
{
int choice,ca,x,a;
heap h,k;
printf("ENTER THE CAPACITY");
scanf("%d",&ca);
h=create(ca);
if(h==NULL)
{
printf("ERROR");
exit(0);
}
while(1)
{
printf("\n1.INSERT\n2.DELETE\n3.DISPLAY\n4.EXIT\nENTER THE CHOICE");
scanf("%d",&choice);
switch(choice)
{
case 1:
printf("ENTER THE VALUE TO BE INSERTED");
scanf("%d",&x);
k=insert(x,h);
break;
case 2:
a=deletemax(h);
printf("%d IS DELETED",a);
break;
case 3:
display(h);
break;
case 4:
exit(0);
break;
}
}
}


bash-3.2$ cc heapimp.c -c
bash-3.2$ cc heapapp.c heapimp.o
bash-3.2$ ./a.out
ENTER THE CAPACITY 4

1.INSERT
2.DELETE
3.DISPLAY
4.EXIT
ENTER THE CHOICE 1
ENTER THE VALUE TO BE INSERTED 5

1.INSERT
2.DELETE
3.DISPLAY
4.EXIT
ENTER THE CHOICE 1
ENTER THE VALUE TO BE INSERTED 2

1.INSERT
2.DELETE
3.DISPLAY
4.EXIT
ENTER THE CHOICE 1
ENTER THE VALUE TO BE INSERTED 6

1.INSERT
2.DELETE
3.DISPLAY
4.EXIT
ENTER THE CHOICE 2
2 IS DELETED
1.INSERT
2.DELETE
3.DISPLAY
4.EXIT
ENTER THE CHOICE 3
65
1.INSERT
2.DELETE
3.DISPLAY
4.EXIT
ENTER THE CHOICE 4
Segmentation fault
bash-3.2$ exit
exit

Script done on Thu 10 Sep 2015 01:32:19 PM IST
