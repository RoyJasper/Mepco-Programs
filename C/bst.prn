*******************************************************************************
EXNO:04                               NAME: RAHUL RAJAN D
DATE:19.8.15                          ROLLNO: 14bit053
*******************************************************************************
   IMPLEMENTATION OF BINARY SEARCH TREE AND TRAVERSAL
*******************************************************************************
#include<stdio.h>
#include<stdlib.h>
#include<string.h>
struct node
{
int data;
struct node *left;
struct node *right;
};
typedef struct node * bst;
bst insert(int,bst);
bst deletion(int,bst);
bst findmin(bst);
bst findmax(bst);
void inorder(bst);
void postorder(bst);
void preorder(bst);

bash-3.2$ cat bstimp.c
#include"bsthead.h"
bst insert(int x,bst t)
{
bst temp;
if(t==NULL)
{
temp=(bst)malloc(sizeof(struct node));
temp->data=x;
temp->left=NULL;
temp->right=NULL;
return temp;
}
else
{
if(x<t->data)
t->left=insert(x,t->left);
else
if(x>t->data)
t->right=insert(x,t->right); 
}
return t;
}
bst deletion(int x,bst t)
{
bst temp;
if(t==NULL)
{
printf("IT IS EMPTY");
}
else if(x<t->data)
t->left=deletion(x,t->left);
else if(x>t->data)
t->right=deletion(x,t->right);
else if(t->left!=NULL && t->right!=NULL)
{
bst temp;
temp=findmin(t->right);
t->data=temp->data;
t->right=deletion(temp->data,t->right);
}
else
{
temp=t;
if(t->left!=NULL)
t=t->left;
if(t->right!=NULL)
t=t->right;
if(temp==t)
t=NULL;
printf("IT IS DELETED SUCCESSFULLY");
free(temp);
}
return t;
}
bst findmin(bst t)
{
if(t!=NULL)
{
while(t->left!=NULL)
t=t->left;
}
return t;
}
bst findmax(bst t)
{
if(t!=NULL)
{
while(t->right!=NULL)
t=t->right;
}
return t;
}
void inorder(bst t)
{
if(t!=NULL)
{
inorder(t->left);
printf("%d",t->data);
inorder(t->right);
}
}
void preorder(bst t)
{
if(t!=NULL)
{
printf("%d",t->data);
preorder(t->left);
preorder(t->right);
}
}
void postorder(bst t)
{
if(t!=NULL)
{
postorder(t->left);
postorder(t->right);
printf("%d",t->data);
}
}


bash-3.2$ cat bstapp.c
#include"bsthead.h"
main()
{
int a,choice;
bst b,c,d,t=NULL;
while(1)
{
printf("\n1.INSERT\n2.DELETE\n3.INORDER\n4.PREORDER\n5.POSTORDER\n6.EXIT\nENTER THE CHOICE");
scanf("%d",&choice);
switch(choice)
{
case 1:
printf("ENTER THE NUMBER");
scanf("%d",&a);
t=insert(a,t);
printf("IT IS INSERTED SUCCESSFULLY");
break;
case 2:
printf("ENTER THE NUMBER TO BE DELETED");
scanf("%d",&a);
t=deletion(a,t);
break;
case 3 :
inorder(t);
break;
case 4:
preorder(t);
break;
case 5:
postorder(t);
break;
case 6:
exit(0);
}
}
}
bash-3.2$ cc bstimp.c -c
bash-3.2$ cc bstapp.c bstimp.o
bash-3.2$ ./a.out

1.INSERT
2.DELETE
3.INORDER
4.PREORDER
5.POSTORDER
6.EXIT
ENTER THE CHOICE 1
ENTER THE NUMBER 5
IT IS INSERTED SUCCESSFULLY
1.INSERT
2.DELETE
3.INORDER
4.PREORDER
5.POSTORDER
6.EXIT
ENTER THE CHOICE 1
ENTER THE NUMBER 2
IT IS INSERTED SUCCESSFULLY
1.INSERT
2.DELETE
3.INORDER
4.PREORDER
5.POSTORDER
6.EXIT
ENTER THE CHOICE 1
ENTER THE NUMBER 6
IT IS INSERTED SUCCESSFULLY
1.INSERT
2.DELETE
3.INORDER
4.PREORDER
5.POSTORDER
6.EXIT
ENTER THE CHOICE 1
ENTER THE NUMBER 3
IT IS INSERTED SUCCESSFULLY
1.INSERT
2.DELETE
3.INORDER
4.PREORDER
5.POSTORDER
6.EXIT
ENTER THE CHOICE 1  3
2356
1.INSERT
2.DELETE
3.INORDER
4.PREORDER
5.POSTORDER
6.EXIT
ENTER THE CHOICE 4
5236
1.INSERT
2.DELETE
3.INORDER
4.PREORDER
5.POSTORDER
6.EXIT
ENTER THE CHOICE 5
3265
1.INSERT
2.DELETE
3.INORDER
4.PREORDER
5.POSTORDER
6.EXIT
ENTER THE CHOICE 2
ENTER THE NUMBER TO BE DELETED 6
IT IS DELETED SUCCESSFULLY
1.INSERT
2.DELETE
3.INORDER
4.PREORDER
5.POSTORDER
6.EXIT
ENTER THE CHOICE 2
ENTER THE NUMBER TO BE DELETED 3
IT IS DELETED SUCCESSFULLY
1.INSERT
2.DELETE
3.INORDER
4.PREORDER
5.POSTORDER
6.EXIT
ENTER THE CHOICE 3
25
1.INSERT
2.DELETE
3.INORDER
4.PREORDER
5.POSTORDER
6.EXIT
ENTER THE CHOICE 4
52
1.INSERT
2.DELETE
3.INORDER
4.PREORDER
5.POSTORDER
6.EXIT
ENTER THE CHOICE5
25
1.INSERT
2.DELETE
3.INORDER
4.PREORDER
5.POSTORDER
6.EXIT
ENTER THE CHOICE 6
bash-3.2$ exit

Script done on Wed 02 Sep 2015 11:58:31 AM IST
