**************************************************************
EX.NO:11		NAME: RAHUL RAJAN D
DATE:22/9/16		ROLLNO: 14BIT053
**************************************************************
	   DNS USING UDP
**************************************************************
CLIENT:
#include<stdio.h>
#include<unistd.h>
#include<sys/types.h>
#include<sys/socket.h>
#include<stdlib.h>
#include<netinet/in.h>
#include<string.h>
#include<arpa/inet.h>
#include<netdb.h>
int main()
{
 int sd,len,ch;
 char msg[100],hname[20];
 struct sockaddr_in ser;
 memset(&ser,0,sizeof(ser));
 ser.sin_family=AF_INET;
 ser.sin_addr.s_addr=htonl(INADDR_ANY);
 ser.sin_port=htons(8980);
 sd=socket(AF_INET,SOCK_DGRAM,0);
 len=sizeof(ser);
 do
 {
  printf("\n1.gethostbyname\n2.gethostbyaddress\n3.getservbyname\n4.getsservbyport\n5.Exit\n\nEnter your choice:");
  scanf("%d",&ch);
  sendto(sd,&ch,sizeof(ch),0,&ser,sizeof(ser));
  switch(ch)
  {
   case 1:printf("\nEnter the host name:");
    scanf("%s",hname);
    sendto(sd,hname,sizeof(hname),0,&ser,sizeof(ser));
    recvfrom(sd,msg,sizeof(msg),0,NULL,NULL);
    printf("Addresses are:\n");
    while(strcmp(msg,"Empty")!=0)
    {
     printf("%s\n",msg);
     recvfrom(sd,msg,sizeof(msg),0,NULL,NULL);
    }
    break;
   case 2:printf("\nEnter the address:");
    scanf("%s",msg);
    sendto(sd,msg,sizeof(msg),0,&ser,sizeof(ser));
    recvfrom(sd,hname,sizeof(hname),0,NULL,NULL);
    printf("The Host Name is %s",hname);
    break;
   case 3:printf("\nEnter servname and prototype:");
    scanf("%s %s",hname,msg);
    sendto(sd,hname,sizeof(hname),0,&ser,sizeof(ser));
    sendto(sd,msg,sizeof(msg),0,&ser,sizeof(ser));
    recvfrom(sd,&len,sizeof(len),0,NULL,NULL);
    printf("The corresponding port no is %d",len);
    break;
   case 4:printf("\nEnter the port number and prototype:");
    scanf("%d %s",&len,msg);
    sendto(sd,&len,sizeof(len),0,&ser,sizeof(ser));
    sendto(sd,msg,sizeof(msg),0,&ser,sizeof(ser));
    recvfrom(sd,hname,sizeof(hname),0,NULL,NULL);
    printf("The corresponding servname is %s",hname);
    break;
  }
 }while(ch!=5);
 close(sd);
 return 0;
}

SERVER:
#include<stdio.h>
#include<unistd.h>
#include<sys/types.h>
#include<sys/socket.h>
#include<stdlib.h>
#include<netinet/in.h>
#include<string.h>
#include<arpa/inet.h>
#include<netdb.h>
int main()
{
 int i,sd,len,clen,ch;
 struct sockaddr_in ser;
 struct sockaddr clt;
 struct hostent*hp;
 struct in_addr **addr_list;
 struct in_addr ip;
 struct servent*sp;
 char buffer[100],hname[20];
 memset(&ser,0,sizeof(ser));
 ser.sin_family=AF_INET;
 ser.sin_port=htons(8980);
 ser.sin_addr.s_addr=htonl(INADDR_ANY);
 sd=socket(AF_INET,SOCK_DGRAM,0);
 bind(sd,&ser,sizeof(ser));
 clen=sizeof(clt);
 do
 {
  recvfrom(sd,&ch,sizeof(ch),0,&clt,&clen);
  switch(ch)
  {
   case 1:recvfrom(sd,hname,sizeof(hname),0,&clt,&clen);
    hp=gethostbyname(hname);
    addr_list = (struct in_addr **)hp->h_addr_list;
    for(i = 0; addr_list[i] != NULL; i++) 
    {
     strcpy(buffer,inet_ntoa(*addr_list[i]));
     sendto(sd,buffer,sizeof(buffer),0,&clt,clen);
    }
    strcpy(buffer,"Empty");
    sendto(sd,buffer,sizeof(buffer),0,&clt,clen);
    break;
   case 2:recvfrom(sd,buffer,sizeof(buffer),0,&clt,&clen);
    inet_aton(buffer,&ip);
    hp=gethostbyaddr((const void*)&ip,sizeof(ip),AF_INET);
    sendto(sd,hp->h_name,sizeof(hname),0,&clt,clen);
    break;
   case 3:recvfrom(sd,hname,sizeof(hname),0,&clt,&clen);
    recvfrom(sd,buffer,sizeof(buffer),0,&clt,&clen);
    printf("%s\t%s",hname,buffer);
    sp=getservbyname(hname,buffer);
    len=ntohs(sp->s_port);
    sendto(sd,&len,sizeof(len),0,&clt,clen);
    break;
   case 4:recvfrom(sd,&len,sizeof(len),0,&clt,&clen);
    recvfrom(sd,buffer,sizeof(buffer),0,&clt,&clen);
    printf("%d\t%s",len,buffer);
    sp=(struct servent*)getservbyport(htons(len),buffer);
    sendto(sd,sp->s_name,sizeof(hname),0,&clt,clen);
    break;
  }
 }while(ch!=5);
 close(sd);
 return 0;
}

OUTPUT:

CLIENT:
1.gethostbyname
2.gethostbyaddress
3.getservbyname
4.getsservbyport
5.Exit

Enter your choice:1

Enter the host name:ubuntu
Addresses are:
127.0.1.1

1.gethostbyname
2.gethostbyaddress
3.getservbyname
4.getsservbyport
5.Exit

Enter your choice:2

Enter the address:127.0.1.1
The Host Name is ubuntu
1.gethostbyname
2.gethostbyaddress
3.getservbyname
4.getsservbyport
5.Exit

Enter your choice:2

Enter the address:ntp tcp
The Host Name is ubuntu
1.gethostbyname
2.gethostbyaddress
3.getservbyname
4.getsservbyport
5.Exit
Enter your choice:3

Enter servname and prototype:ntp tcp
The corresponding port no is 123
1.gethostbyname
2.gethostbyaddress
3.getservbyname
4.getsservbyport
5.Exit

Enter your choice:4

Enter the port number and prototype:123 tcp
The corresponding servname is ntp
1.gethostbyname
2.gethostbyaddress
3.getservbyname
4.getsservbyport
5.Exit

Enter your choice:5

