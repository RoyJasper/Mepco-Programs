**************************************************************
EX.NO:07		NAME: RAHUL RAJAN D
DATE:11/8/16		ROLLNO: 14BIT053
**************************************************************
  IMPLEMENTATION OF GO-BACK-N PROTOCOL
**************************************************************
CLIENT:
#include<stdio.h>
#include<stdlib.h>
#include<string.h>
#include<sys/socket.h>
#include<unistd.h>
#include<netinet/in.h>
#include<sys/types.h>
#include<time.h>
int main()
{
 int sd,b,n,lac,l,count,f,m,t[100],i,j,k;
 char msg[100][100],a[10],msg1[100];
 time_t start,end;
 struct tm *cpu;
 struct sockaddr_in server,client;
 server.sin_family=AF_INET;
 printf("ENTER THE PORT NUMBER");
 scanf("%d",&f);
 server.sin_port=htons(f);
 server.sin_addr.s_addr=htonl(INADDR_ANY);
 sd=socket(AF_INET,SOCK_STREAM,0);
 if(sd>=0)
  printf("SOCKET SUCCESS");
 else
  printf("ERROR");
 b=connect(sd,(struct sockaddr *) &server,sizeof(server));
 printf("ENTER THE NO OF FRAMES:");
 scanf("%d",&m);
 printf("ENTER THE WINDOW SIZE:");
 scanf("%d",&n);
 printf("ENTER THE MSG");
 for(i=0;i<m;i++)
  scanf("%s",msg[i]);
 a[0]=m+48;
 send(sd,a,10,0);
 a[0]=n+48;
 send(sd,a,10,0);
 for(i=0;i<m;i++)
 {
  count=0;
  for(j=0;j<strlen(msg[i]);j++)
  {
   if(msg[i][j]=='1')
   {
    count++;
   }
  }
  if(count%2==0)
   msg[i][strlen(msg[i])]='1';
  else
   msg[i][strlen(msg[i])]='0';
  printf("\n%s",msg[i]);
  if(i==1)
   msg[i][strlen(msg[i])-1]='0';
 }
 k=1;
 for(i=0;i<m;i=i+n)
 {
  printf("%d",i);
  time(&start);
  cpu=localtime(&start);
  t[i]=(int)cpu->tm_sec;
  if(k==1)
  {
   for(j=i;j<(i+n);j++)
   {
    send(sd,msg[j],100,0);
   }
   recv(sd,msg1,100,0);
   printf("%s",msg1);
   if(strcmp(msg1,"SEND")==0)
   {
    k=1;
   }
   else
   {
    k=1;
    msg[1][strlen(msg[i])-1]='1';
    i=i-n;
   }
  }
  else
   break;
 }
 close(sd);
}

SERVER:
#include<stdio.h>
#include<stdlib.h>
#include<string.h>
#include<sys/socket.h>
#include<unistd.h>
#include<netinet/in.h>
#include<sys/types.h>
int main()
{
 int sd,b,ad,i,l,len,f,j,n,m,nn,bb=0,k,count;
 char msg[100],a[10],msg1[]="SEND",msg2[]="ERROR";
 struct sockaddr_in server,client;
 server.sin_family=AF_INET;
 printf("ENTER THE PORT NUMBER");
 scanf("%d",&f);
 server.sin_port=htons(f);
 server.sin_addr.s_addr=htonl(INADDR_ANY);
 sd=socket(AF_INET,SOCK_STREAM,0);
 if(sd==0)
  printf("SOCKET SUCCESS");
 else
  printf("ERROR");
 b=bind(sd,(struct sockaddr *) &server,sizeof(server));
 if(b==0)
  printf("BIND SUCCESS");
 else
  printf("BIND ERROR");
 l=listen(sd,5);
 if(l==0)
  printf("LISTEN SUCCESS");
 len=sizeof(client);
 ad=accept(sd,(struct sockaddr *) &client,&len);
 recv(ad,a,10,0);
 m=a[0]-48;
 recv(ad,a,10,0);
 n=a[0]-48;
 if(ad>0)
  printf("ACCEPT SUCCESS");
 i=0;
 while(i<m)
 {
  bb=0;
  for(j=i;j<i+n;j++)
  {
   recv(ad,msg,100,0);
   nn=strlen(msg);
   count=0;
   for(k=0;k<nn;k++)
   {
    if(msg[k]=='1')
    {
     count++;
    }
   }
   if(count%2!=0)
   {
    bb=bb+1;
    msg[nn-1]='\0';
   }
   printf("\n%s",msg);
  }
  if(bb==n)
  {
   bb=0;
   send(ad,msg1,100,0);
   j=0;
   while(j!=100)
   {
    msg[j]='\0';
    j++;
   }
   i=i+n;
  }
  else
  {
   printf("%d",bb);
   send(ad,msg2,100,0);
   i=i-n;
  }
 }
}

OUTPUT:
WITHOUT ERROR:
CLIENT:
ENTER THE PORT NUMBER:8802
SOCKET SUCCESS
ENTER THE NO OF FRAMES:4
ENTER THE WINDOW SIZE:2
ENTER THE MSG100
010
111
001
SEND
SEND

SERVER:
ENTER THE PORT NUMBER:8802
SOCKET SUCCESS
BIND SUCCESS
LISTEN SUCCESS
ACCEPT SUCCESS
100
010
111
001

WITH ERROR:
CLIENT:
ENTER THE PORT NUMBER:8803
SOCKET SUCCESSENTER THE NO OF FRAMES:4
ENTER THE WINDOW SIZE:2
ENTER THE MSG111
101
001
011
ERROR
SEND
SEND

SERVER:
ENTER THE PORT NUMBER:8803
SOCKET SUCCESS
BIND SUCCESS
LISTEN SUCCESS
ACCEPT SUCCESS
111
1010
111
101
001
011
