^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
14BIT058 									ROY JASPER C S
						NS2 PROGRAMS
-----------------------------------------------
PROGRAM 1:
#-------Event scheduler object creation--------#

                  
set ns [new Simulator]



#----------creating trace objects----------------#

set nt [open test2.tr w]
$ns trace-all $nt


#----------creating nam objects----------------#

set nf [open test2.nam w]
$ns namtrace-all $nf


#----------Setting color ID----------------#


$ns color 1 darkmagenta
$ns color 2 yellow
$ns color 3 blue
$ns color 4 green
$ns color 5 black
 
#---------- Creating Network----------------#

set totalNodes 3

for {set i 0} {$i < $totalNodes} {incr i} {
set node_($i) [$ns node]
}

set server 0
set router 1
set client 2

#---------- Creating Duplex Link----------------#


$ns duplex-link $node_($server) $node_($router) 2Mb 50ms DropTail
$ns duplex-link $node_($router) $node_($client) 2Mb 50ms DropTail

$ns duplex-link-op $node_($server) $node_($router) orient right
$ns duplex-link-op $node_($router) $node_($client) orient right

#------------Labelling----------------#

$ns at 0.0 "$node_($server) label Server"
$ns at 0.0 "$node_($router) label Router"
$ns at 0.0 "$node_($client) label Client"

$ns at 0.0 "$node_($server) color blue"
$ns at 0.0 "$node_($client) color blue"

$node_($server) shape hexagon
$node_($client) shape hexagon


#------------Data Transfer between Nodes----------------#

# Defining a transport agent for sending
set tcp [new Agent/TCP]

# Attaching transport agent to sender node
$ns attach-agent $node_($server) $tcp

# Defining a transport agent for receiving
set sink [new Agent/TCPSink]

# Attaching transport agent to receiver node
$ns attach-agent $node_($client) $sink

#Connecting sending and receiving transport agents
$ns connect $tcp $sink

#Defining Application instance
set ftp [new Application/FTP]

# Attaching transport agent to application agent
$ftp attach-agent $tcp

# Setting flow color 
$tcp set fid_ 4

# data packet generation starting time
$ns at 1.0 "$ftp start"

# data packet generation ending time
$ns at 6.0 "$ftp stop"



#---------finish procedure--------#

proc finish {} {
	   global ns nf nt 
	   $ns flush-trace
	   close $nf	
         close $nt		   
	   puts "running nam..."
	   exec nam test2.nam &
	   exit 0
}

#Calling finish procedure
$ns at 10.0 "finish"
$ns run
-----------------------------------------------
PROGRAM 2:
##### Declare Simulator 
set ns [new Simulator] 
##### Setting output file 
set file [open out.tr w] 
$ns trace-all $file 
set namfile [open out.nam w] 
$ns namtrace-all $namfile 
set tcpfile [open out.tcp w] 
Agent/TCP set trace_all_oneline_ true 
##### Setting Node 
set n0 [$ns node] 
set n1 [$ns node] 
set n2 [$ns node] 
set n3 [$ns node] 
##### Setting Link 
$ns duplex-link $n0 $n2 3Mb 5ms DropTail 
$ns duplex-link $n1 $n2 3Mb 5ms DropTail 
$ns duplex-link $n2 $n3 1.5Mb 10ms DropTail 
$ns duplex-link-op $n0 $n2 orient right-down 
$ns duplex-link-op $n1 $n2 orient right-up 
$ns duplex-link-op $n2 $n3 orient right 
$ns duplex-link-op $n2 $n3 queuePos 0.5 
##### Setting Queue Length 
$ns queue-limit $n2 $n3 20 
##### Setting UDP Agent 
set udp [new Agent/UDP] 
$ns attach-agent $n0 $udp 
set null [new Agent/Null] 
$ns attach-agent $n3 $null 
$ns connect $udp $null 
$udp set fid_ 0 
$ns color 0 blue 
##### Setting CBR Application 
set cbr [new Application/Traffic/CBR] 
$cbr attach-agent $udp 
##### Setting TCP Agent 
set tcp [new Agent/TCP] 
$ns attach-agent $n1 $tcp 
set sink [new Agent/TCPSink] 
$ns attach-agent $n3 $sink 
$ns connect $tcp $sink 
$tcp set fid_ 1 
$ns color 1 red 
### Setting output file of TCP Agent 
$tcp attach-trace $tcpfile 
$tcp trace cwnd_ 
##### Setting FTP Application 
set ftp [new Application/FTP] 
$ftp attach-agent $tcp 
##### Setting time schedule of simulation 
$ns at 1.0 "$cbr start" 
$ns at 1.5 "$ftp start" 
$ns at 3.0 "$ftp stop" 
$ns at 3.5 "$cbr stop" 
$ns at 4.0 "finish" 
proc finish {} { 
global ns file namfile tcpfile 
$ns flush-trace 
close $file 
close $namfile 
close $tcpfile 
exit 0 
} 
##### Finish setting and start simulation 
$ns run 
--------------------------------------------
